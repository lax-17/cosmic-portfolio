
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Neural Data Visualization Interface Design System */

@layer base {
  :root {
    /* Enhanced Cosmic Interface Color Palette */
    --neural-black: 0 0% 100%; /* Pure white for text */
    --neural-green: 180 100% 65%; /* Electric cyan for cosmic energy */
    --neural-pink: 290 100% 75%; /* Vivid purple for cosmic mystery */
    --neural-blue: 210 100% 75%; /* Bright blue for cosmic light */
    --neural-gray: 230 25% 12%; /* Deep space gray */
    --neural-light-gray: 0 0% 90%; /* Bright text for contrast */

    /* Design System Colors - Dark Theme (Default) */
    --background: 230 40% 6%; /* Deep space black */
    --foreground: var(--neural-light-gray);

    --panel: 230 30% 10%; /* Cosmic panel background */
    --panel-foreground: var(--neural-light-gray);
    --panel-border: 210 60% 30%;

    --terminal: 230 45% 8%; /* Deep terminal void */
    --terminal-border: var(--neural-blue);
    --terminal-text: var(--neural-green);

    --primary: var(--neural-blue);
    --primary-foreground: 0 0% 3%;

    --secondary: var(--neural-pink);
    --secondary-foreground: 0 0% 3%;

    --accent: var(--neural-green);
    --accent-foreground: 0 0% 3%;

    --muted: 230 25% 15%;
    --muted-foreground: 0 0% 70%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 210 40% 25%;
    --input: 230 30% 12%;
    --ring: var(--neural-blue);

    --radius: 0; /* Sharp corners for terminal aesthetic */

    /* Data Visualization Colors */
    --data-node: var(--neural-blue);
    --data-connection: 230 30% 20%;
    --data-active: var(--neural-green);
    --data-hover: var(--neural-pink);

    /* Cosmic Effects */
    --cosmic-glow: 0 0 20px hsl(var(--neural-blue) / 0.3);
    --cosmic-shadow: 0 0 40px hsl(var(--neural-blue) / 0.1);

    /* Transitions - Instant for terminal feel */
    --transition-instant: all 0.1s ease-out;
    --transition-data: all 0.2s ease-out;

    /* Theme transition */
    --theme-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark {
    /* Dark theme is the default, so no changes needed */
  }

  .light {
    /* Light Theme Variables */
    --background: 0 0% 98%; /* Light background */
    --foreground: 230 40% 10%; /* Dark text */

    --panel: 0 0% 95%; /* Light panel background */
    --panel-foreground: 230 40% 15%; /* Dark panel text */
    --panel-border: 210 30% 80%; /* Light border */

    --terminal: 0 0% 93%; /* Light terminal background */
    --terminal-border: 210 60% 60%; /* Light terminal border */
    --terminal-text: 180 100% 30%; /* Darker green for light mode */

    --primary: 210 100% 50%; /* Blue for primary */
    --primary-foreground: 0 0% 98%;

    --secondary: 290 100% 60%; /* Purple for secondary */
    --secondary-foreground: 0 0% 98%;

    --accent: 180 100% 40%; /* Teal for accent */
    --accent-foreground: 0 0% 98%;

    --muted: 0 0% 90%;
    --muted-foreground: 230 20% 40%;

    --border: 210 20% 85%;
    --input: 0 0% 90%;
    --ring: 210 100% 50%;

    /* Data Visualization Colors for Light Theme */
    --data-node: 210 100% 50%; /* Blue nodes */
    --data-connection: 230 20% 70%; /* Light gray connections */
    --data-active: 180 100% 40%; /* Teal active */
    --data-hover: 290 100% 60%; /* Purple hover */

    /* Cosmic Effects for Light Theme */
    --cosmic-glow: 0 0 20px hsl(var(--neural-blue) / 0.2);
    --cosmic-shadow: 0 0 30px hsl(var(--neural-blue) / 0.05);
  }
}

/* Theme transition for all elements */
*,
*::before,
*::after {
  transition: var(--theme-transition);
}

/* Reduced motion respect */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    transition: none !important;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: auto; /* Instant scrolling for terminal feel */
  }

  body {
    @apply bg-background text-foreground font-mono overflow-x-hidden;
    background: linear-gradient(135deg,
      hsl(var(--background)) 0%,
      hsl(230 35% 8%) 50%,
      hsl(var(--background)) 100%);
    background-attachment: fixed;
    font-family: 'JetBrains Mono', monospace;
  }

  section {
    min-height: auto; /* let content control height; prevents excessive blank space */
    padding: 0; /* Sections define their own spacing via utilities */
  }

  /* Terminal cursor animation */
  .cursor {
    animation: blink 1s infinite;
  }

  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
  }

  /* Skip links for accessibility */
  .skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
    padding: 8px;
    text-decoration: none;
    border-radius: 0;
    z-index: 1000;
    font-family: 'JetBrains Mono', monospace;
    font-size: 14px;
    transition: top 0.3s;
  }

  .skip-link:focus {
    top: 6px;
  }

  /* Screen reader only content */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }

    .cursor {
      animation: none;
    }

    .animate-data-flow,
    .animate-neural-pulse,
    .animate-typing,
    .animate-scan-line {
      animation: none;
    }
  }
}

@layer components {
  /* Terminal Panel */
  .terminal-panel {
    @apply border border-terminal-border bg-terminal text-terminal-text;
    border-radius: 0;
    font-family: 'JetBrains Mono', monospace;
  }

  .terminal-header {
    @apply flex items-center gap-2 px-3 py-2 border-b border-terminal-border;
    background: hsl(var(--panel));
  }

  .terminal-dot {
    @apply w-3 h-3 rounded-full;
  }

  .terminal-content {
    @apply p-4 font-mono text-sm;
  }

  /* Code Editor Panel */
  .code-panel {
    @apply border border-panel-border bg-panel text-panel-foreground;
    border-radius: 0;
    font-family: 'JetBrains Mono', monospace;
  }

  .code-header {
    @apply flex items-center justify-between px-4 py-2 border-b border-panel-border;
    background: hsl(var(--muted));
  }

  /* File Tree Navigation */
  .file-tree {
    @apply font-mono text-sm;
  }

  .file-item {
    @apply flex items-center gap-2 px-4 py-1 hover:bg-muted/50 cursor-pointer;
    transition: var(--transition-instant);
  }

  .file-item.active {
    @apply bg-primary/20 text-primary;
  }

  /* Neural Network Visualization */
  .neural-network {
    @apply relative w-full h-full;
  }

  .neural-node {
    @apply absolute w-3 h-3 rounded-full border-2;
    transition: var(--transition-data);
  }

  .neural-connection {
    @apply absolute opacity-30;
    stroke: hsl(var(--data-connection));
    stroke-width: 1;
    transition: var(--transition-data);
  }

  .neural-connection.active {
    @apply opacity-80;
    stroke: hsl(var(--data-active));
  }

  /* Data Grid Layout */
  .data-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
    align-items: start;
  }

  /* Asymmetric Layout */
  .asymmetric-layout {
    display: grid;
    grid-template-columns: 3fr 1fr; /* make career-timeline.git panel significantly wider */
    gap: 2rem;
    align-items: start;
  }

  @media (max-width: 768px) {
    .asymmetric-layout {
      grid-template-columns: 1fr;
    }
  }

  /* Syntax Highlighting */
  .syntax-keyword { @apply text-secondary; }
  .syntax-string { @apply text-accent; }
  .syntax-number { @apply text-primary; }
  .syntax-comment { @apply text-muted-foreground; }
  .syntax-function { @apply text-primary font-semibold; }

  /* Git Commit Style */
  .commit-entry {
    @apply flex items-start gap-4 p-4 border-l-2 border-muted;
    transition: var(--transition-instant);
  }

  .commit-entry:hover {
    @apply border-l-primary bg-panel/50;
  }

  .commit-hash {
    @apply font-mono text-xs text-muted-foreground;
  }

  /* Navigation Command Line */
  .nav-terminal {
    @apply fixed bottom-4 left-4 right-4 z-50;
    @apply terminal-panel px-4 py-2;
  }

  /* Loading Indicators */
  .loading-dots::after {
    content: '...';
    animation: loading 1s infinite;
  }

  @keyframes loading {
    0%, 20% { content: '.'; }
    40% { content: '..'; }
    60%, 100% { content: '...'; }
  }
}

@layer utilities {
  /* Data Flow Animations */
  @keyframes data-flow {
    0% { transform: translateX(-100%); opacity: 0; }
    50% { opacity: 1; }
    100% { transform: translateX(100%); opacity: 0; }
  }

  @keyframes neural-pulse {
    0%, 100% { 
      border-color: hsl(var(--data-node)); 
      background: transparent;
    }
    50% { 
      border-color: hsl(var(--data-active)); 
      background: hsl(var(--data-active) / 0.3);
    }
  }

  @keyframes typing {
    from { width: 0; }
    to { width: 100%; }
  }

  @keyframes scan-line {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
  }

  .animate-data-flow {
    animation: data-flow 2s ease-in-out infinite;
  }

  .animate-neural-pulse {
    animation: neural-pulse 3s ease-in-out infinite;
  }

  .animate-typing {
    animation: typing 2s steps(40) 1;
    overflow: hidden;
    white-space: nowrap;
  }

  .animate-scan-line {
    animation: scan-line 3s linear infinite;
  }

  /* Terminal Text Sizes */
  .text-terminal-lg {
    @apply text-lg md:text-xl font-mono;
  }

  .text-terminal-xl {
    @apply text-xl md:text-2xl lg:text-3xl font-mono;
  }

  .text-data-header {
    @apply text-sm md:text-base font-mono text-primary;
  }

  /* Interactive States */
  .hover-highlight:hover {
    @apply bg-primary/10 text-primary;
    transition: var(--transition-instant);
  }

  .focus-terminal:focus {
    @apply outline-none ring-1 ring-primary;
  }

  /* Cosmic Effects */
  .cosmic-glow {
    box-shadow: var(--cosmic-glow);
  }

  .cosmic-border {
    border: 1px solid hsl(var(--neural-blue));
    box-shadow: var(--cosmic-shadow);
  }

  .cosmic-text {
    text-shadow: 0 0 10px hsl(var(--neural-blue) / 0.5);
  }

  /* Custom Scrollbar for Cosmic Theme */
  .scrollbar-thin {
    scrollbar-width: thin;
  }

  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  .scrollbar-thin::-webkit-scrollbar-track {
    background: hsl(var(--panel));
    border-radius: 3px;
  }

  .scrollbar-thin::-webkit-scrollbar-thumb {
    background: hsl(var(--primary) / 0.3);
    border-radius: 3px;
    transition: background-color 0.2s ease;
  }

  .scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary) / 0.6);
  }

  .scrollbar-thin::-webkit-scrollbar-corner {
    background: hsl(var(--panel));
  }

  .cosmic-bg {
    background: linear-gradient(135deg,
      hsl(var(--background)) 0%,
      hsl(230 35% 8%) 50%,
      hsl(var(--background)) 100%);
  }

  /* Enhanced Terminal Panel */
  .terminal-panel {
    @apply border border-terminal-border bg-terminal text-terminal-text;
    border-radius: 0;
    font-family: 'JetBrains Mono', monospace;
    box-shadow: var(--cosmic-shadow);
  }

  .terminal-panel:hover {
    box-shadow: var(--cosmic-glow);
  }

  /* Hardware Acceleration & Performance */
  .hardware-accelerated {
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  .gpu-accelerated {
    will-change: transform, opacity;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
  }

  .animation-optimized {
    will-change: transform;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    contain: layout style paint;
  }

  /* Optimized transitions for animations */
  .smooth-transform {
    transition: transform 0.2s ease-out, opacity 0.2s ease-out;
    will-change: transform, opacity;
  }

}